/*! 
 jQuery StickMe Plugin v1.3.0
 https://stickme.metodiev.dev

 Copyright (c) 2020 Martin Metodiev
 Licensed under the MIT license.
*/


!function(i){"use strict";var n={base:{options:{top:0}},events:["onStick","onUnstick","onDestroy"],dom:{observer:i('<div class="stickme_observer">'),holder:i('<div class="stickme-holder">')},setup:{target:function(t){return t&&t.hasOwnProperty("target")?t.target:i(".stickme")},options:function(e){var s={},r={};return function(){for(var t in n.base.options)n.base.options.hasOwnProperty(t)&&(s[t]=e&&e.hasOwnProperty(t)?e[t]:n.base.options[t])}(),function(){for(var t=0;t<n.events.length;t++)e&&e.hasOwnProperty(n.events[t])&&(r[n.events[t]]=e[n.events[t]])}(),i.extend(s,{events:r}),s}},methods:{init:function(t){var e=this;for(var s in e.options=n.setup.options(t),e.createObserver(),e.setPosition(),e.options.events)e.options.events.hasOwnProperty(s)&&e.children().bind(s,e.options.events[s]);return e},getPosition:function(){return i(this.observer).offset().top-i(document).scrollTop()},setPosition:function(){var t=this;t.position=t.getPosition();var e=t.status||null;return t.status=t.position<=t.options.top?"stick":"unstick",t.status!==e&&t[t.status](),t},createObserver:function(){var t=this;return t.observer=n.dom.observer.clone(),t.before(t.observer),t},setStyles:function(){var t=this;return t.css({width:t.observer.width(),position:"fixed",zIndex:10,left:t.observer.offset().left,top:t.options.top}),t.observer.height(t.height()),t},stick:function(){var t=this;return t.children().trigger("onStick",[t.children()]),t.stickmeMode="sticked",t.observer.height(t.height()),t.setStyles(),t},unstick:function(){var t=this;return t.children().trigger("onUnstick",[t.children()]),t.stickmeMode="unsticked",t.observer.height(0),t.removeAttr("style"),t},resizeHandler:function(){var t=this;return t.stickmeMode&&"sticked"===t.stickmeMode&&t.setStyles(),t}},output:{extended:!0,update:function(){return this.each(function(){var t=i(this).parent(".stickme-holder")[0].stickme;"sticked"===t.stickmeMode&&t.setStyles()}),this},destroy:function(){for(var t in this.each(function(){var t=i(this).parent(".stickme-holder")[0],e=t.stickme;"sticked"===e.stickmeMode&&e.unstick(),e.observer.remove(),function(){for(var t in e.options)e.options.hasOwnProperty(t)&&e.children().unbind(t,e.options[t])}();for(var s=0;s<i.stickme.targets.length;s++)if(t===i.stickme.targets[s][0]){i.stickme.targets.splice(s,1);break}e.children().trigger("onDestroy",[e.children()]),e.before(e.children()),e.remove(),delete t.stickme}),n.output)n.output.hasOwnProperty(t)&&this.hasOwnProperty[n.output[t]]&&delete this[n.output[t]];return this}}};i.stickme=function(r){var t=n.setup.target(r);return t.each(function(){if(!i(this).parent().is(".stickme-holder")){var t=n.dom.holder.clone();i(this).after(t),t.append(i(this))}var e=i(this).parent(".stickme-holder")[0];if(!e.stickme){i.extend(e,{stickme:i.extend(i(e),n.methods)});var s=e.stickme;i.stickme.targets.push(s.init(r))}}),t.extended||i.extend(t,n.output),t},i.fn.stickme=function(t){return t=i.extend({},t,{target:i(this)}),i.stickme(t)},i.stickme.targets=[],i(document).bind("scroll",function(){for(var t in i.stickme.targets){if(i.stickme.targets.hasOwnProperty(t))i.stickme.targets[t].setPosition()}}),i(window).bind("resize",function(){for(var t in i.stickme.targets){if(i.stickme.targets.hasOwnProperty(t))i.stickme.targets[t].resizeHandler()}})}(jQuery);
//# sourceMappingURL=jquery.stickme.min.js.map